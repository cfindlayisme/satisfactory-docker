name: Build & Push Production Docker Image

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]
  schedule:
    - cron: '0 12 * * 1' # Run automatically at Monday 12:00 UTC

jobs:

  # sonar:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: SonarCloud Scan
  #     uses: sonarsource/sonarcloud-github-action@master
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-and-scan:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Repository
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_REPO }}:latest
    - name: Build the second Docker image
      run: docker build . --file Dockerfile-GCP --tag ${{ secrets.DOCKER_REPO }}:gcp
    - name: Run Trivy vulnerability scanner on base image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ secrets.DOCKER_REPO }}:latest
        exit-code: '1'
        severity: 'HIGH'
        ignore-unfixed: true
    - name: Run Trivy vulnerability scanner on GCP image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ secrets.DOCKER_REPO }}:gcp
        exit-code: '1'
        severity: 'HIGH'
        ignore-unfixed: true
    - name: Notify IRC Success
      run: |
        export COMMIT_MSG=$(git log -1 --pretty=%B)
        export MESSAGE="Build and scan of ${{ secrets.DOCKER_REPO }}:latest and ${{ secrets.DOCKER_REPO }}:gcp completed. Commit message: $COMMIT_MSG. See https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        curl -X POST -H "Content-Type: application/json" -d "{\"message\": \"$MESSAGE\", \"password\": \"${{ secrets.WMB_PASSWORD }}\", \"colourcode\": 3}" https://convos.findlayis.me/wmb/message
      if: success()
    - name: Notify IRC Failure
      run: |
        export COMMIT_MSG=$(git log -1 --pretty=%B)
        export MESSAGE="Build and scan of ${{ secrets.DOCKER_REPO }}:latest and ${{ secrets.DOCKER_REPO }}:gcp failed. Commit message: $COMMIT_MSG. See https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        curl -X POST -H "Content-Type: application/json" -d "{\"message\": \"$MESSAGE\", \"password\": \"${{ secrets.WMB_PASSWORD }}\", \"colourcode\": 4}" https://convos.findlayis.me/wmb/message
      if: failure()

  build-and-push:
      needs: [build-and-scan]
      if: github.ref == 'refs/heads/main'
      
      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Repository
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_REPO }}:latest --tag ghcr.io/${{ github.repository }}:latest
      - name: Build the second Docker image
        run: docker build . --file Dockerfile-GCP --tag ${{ secrets.DOCKER_REPO }}:gcp --tag ghcr.io/${{ github.repository }}:gcp
      - name: Push the Docker image
        run: |
          docker push ${{ secrets.DOCKER_REPO }}:latest
          docker push ghcr.io/${{ github.repository }}:latest
      - name: Push the second Docker image
        run: |
          docker push ${{ secrets.DOCKER_REPO }}:gcp
          docker push ghcr.io/${{ github.repository }}:gcp
      - name: Notify IRC Success
        run: |
          export COMMIT_MSG=$(git log -1 --pretty=%B)
          export MESSAGE="Build and push of ${{ secrets.DOCKER_REPO }}:latest, ${{ secrets.DOCKER_REPO }}:gcp, ghcr.io/${{ github.repository }}:latest, and ghcr.io/${{ github.repository }}:gcp completed. Commit message: $COMMIT_MSG. See https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          curl -X POST -H "Content-Type: application/json" -d "{\"message\": \"$MESSAGE\", \"password\": \"${{ secrets.WMB_PASSWORD }}\", \"colourcode\": 3}" https://convos.findlayis.me/wmb/message
        if: success()
      - name: Notify IRC Failure
        run: |
          export COMMIT_MSG=$(git log -1 --pretty=%B)
          export MESSAGE="Build and push of ${{ secrets.DOCKER_REPO }}:latest, ${{ secrets.DOCKER_REPO }}:gcp, ghcr.io/${{ github.repository }}:latest, and ghcr.io/${{ github.repository }}:gcp failed. Commit message: $COMMIT_MSG. See https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          curl -X POST -H "Content-Type: application/json" -d "{\"message\": \"$MESSAGE\", \"password\": \"${{ secrets.WMB_PASSWORD }}\", \"colourcode\": 4}" https://convos.findlayis.me/wmb/message
        if: failure()